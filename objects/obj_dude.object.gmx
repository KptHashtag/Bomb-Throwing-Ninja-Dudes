<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_Dude</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ktory_to_dude = -1

color = make_colour_hsv(irandom(255),irandom(255),irandom(255))

spd = obj_gameCtrl.spd

bombs = 2

alive = true

xx = x
yy = y


powerup = "none"
/*
    none
    shield
    paddle
    rolling
*/

/*
type = "star"

    star
    vert
    hor
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(choose(sound0_oof_3,sound1_oof_6,sound2_oof_1,sound3_oof_2),0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_axis_deadzone(ktory_to_dude, 0.25);       // Set the "deadzone" for the axis

var haxis = gamepad_axis_value(ktory_to_dude, gp_axislh);
var vaxis = gamepad_axis_value(ktory_to_dude, gp_axislv);
star = gamepad_button_check_pressed(ktory_to_dude, gp_face1)
hori = gamepad_button_check_pressed(ktory_to_dude, gp_face2)
ver = gamepad_button_check_pressed(ktory_to_dude, gp_face3)
nuke = gamepad_button_check_pressed(ktory_to_dude, gp_face4)
direction = point_direction(0, 0, haxis, vaxis);
speed = point_distance(0 ,0, haxis, vaxis) * spd;

if(bombs &gt; 0 &amp;&amp; place_free(xx,yy) &amp;&amp; star || hori || ver ){
    var t = instance_create(xx,yy,obj_bomb);
    t.parent = id
    if(star) t.type = "star"
    else if(hori) t.type = "hori"
    else if(ver) t.type = "ver"
    bombs -= 1
}

if(nuke){
    if(!instance_exists(obj_nuke)){
        instance_create(room_width/2,room_height/2, obj_nuke)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var _x = view_wview[view]/2 - sprite_get_width(sp_ui_back)/2
var _y = view_hview[view] - 16

draw_set_halign(fa_center)

var txt = ""

switch(ktory_to_dude){
                    case 0:
                        txt = "Bombs: " + string(bombs) + " / Pts: " + string(global.pts_first)
                        break;
                    case 1:
                        txt = "Bombs: " + string(bombs) + " / Pts: " + string(global.pts_second)
                        break;
                    case 2:
                        txt = "Bombs: " + string(bombs) + " / Pts: " + string(global.pts_third)
                        break;
                    case 4:
                        txt = "Bombs: " + string(bombs) + " / Pts: " + string(global.pts_forth)
                        break;
                }
draw_sprite_stretched(sp_ui_back,0,_x,_y, clamp(string_width(txt), sprite_get_width(sp_ui_back), 1000), sprite_get_height(sp_ui_back))
                
draw_text(_x, _y, txt)

draw_set_halign(fa_left)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = color
if(direction &gt; 90 &amp;&amp; direction &lt; 270){
    image_xscale = -1
}else{
    image_xscale = 1
}
draw_self()


draw_set_font(font0)
//draw_text(x, y - sprite_height/2, "PLACE:" + string(place) + "/PW:" + string(pw) + "/NW:" + string(nw) + "/USE:" + string(use))

switch(ktory_to_dude){
                    case 0:
                        draw_text(x,y + sprite_height/2, global.pts_first)
                        break;
                    case 1:
                        draw_text(x,y + sprite_height/2, global.pts_second)
                        break;
                    case 2:
                        draw_text(x,y + sprite_height/2, global.pts_third)
                        break;
                    case 4:
                        draw_text(x,y + sprite_height/2, global.pts_forth)
                        break;
                }
xx = floor(x/sprite_get_width(sp_Crate)) * sprite_get_width(sp_Crate) + sprite_get_width(sp_Crate)/2
yy = floor(y/sprite_get_height(sp_Crate)) * sprite_get_height(sp_Crate) + sprite_get_height(sp_Crate)/2

draw_set_alpha(0.5)

draw_sprite(sprite9_Bomb_Strip,0,xx,yy)

draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
